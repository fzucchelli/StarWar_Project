{"version":3,"sources":["Slider/Film.js","Slider/Cards.js","Slider/Slider.js","util/config.js","App.js","index.js"],"names":["Film","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","filmTitle","release_date","_this2","fetch","then","response","json","data","setState","title","react_default","a","createElement","className","src","alt","concat","React","Component","Cards","ColorChange","e","heart","currentTarget","style","color","cardsToShow","map","i","id","key","cardStyle","href","name","model","crew","films","film","Film_Film","Slider","cardData","currentCard","position","transform","width","numCardsToShow","console","log","results","filter","ship","type","margin","window","getComputedStyle","document","getElementById","marginLeft","JSON","parse","replace","cardWidth","cardMargin","cardNumber","length","setCard","transition","_this3","leftArrowStyle","rigthArrowStyle","Slider_Cards","onClick","handleClick","defaultProps","App","src_Slider_Slider","ReactDOM","render","src_App"],"mappings":"4LAGqBA,oBACnB,SAAAA,EAAYC,GAAO,IAAAC,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAAL,IACjBE,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAAH,GAAAQ,KAAAH,KAAMJ,KACDQ,MAAQ,CACXC,UAAW,GACXC,aAAc,IAJCT,mFAQC,IAAAU,EAAAP,KAElBQ,MAAMR,KAAKJ,MAAMS,WACdI,KAAK,SAAAC,GAAQ,OAAIA,EAASC,SAC1BF,KAAK,SAAAG,GAEJL,EAAKM,SAAS,CACZR,UAAWO,EAAKE,MAChBR,aAAcM,EAAKN,kDAMzB,OACES,EAAAC,EAAAC,cAAA,OAAKC,UAAU,6BACbH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,UACbH,EAAAC,EAAAC,cAAA,OACEE,IAAI,gBACJC,IAAI,GACJF,UAAU,gCAGdH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,WACbH,EAAAC,EAAAC,cAAA,QAAMC,UAAU,YACblB,KAAKI,MAAMC,UACX,KAFH,IAAAgB,OAGOrB,KAAKI,MAAME,aAHlB,eAjCwBgB,IAAMC,YC0DzBC,6MAxDbC,YAAc,SAAAC,GACZ,IAAIC,EAAQD,EAAEE,cACY,UAAtBD,EAAME,MAAMC,MACdH,EAAME,MAAMC,MAAQ,QAEpBH,EAAME,MAAMC,MAAQ,gFAGf,IAAAvB,EAAAP,KACP,OACEe,EAAAC,EAAAC,cAAA,OAAKC,UAAU,WACZlB,KAAKJ,MAAMmC,YAAYC,IAAI,SAACpB,EAAMqB,GACjC,OACElB,EAAAC,EAAAC,cAAA,OACEC,UAAU,OACVgB,GAAG,OACHC,IAAKvB,EAAKsB,GACVL,MAAOtB,EAAKX,MAAMwC,WAElBrB,EAAAC,EAAAC,cAAA,OAAKC,UAAU,mDACbH,EAAAC,EAAAC,cAAA,KAAGoB,KAAMzB,EAAKyB,MACZtB,EAAAC,EAAAC,cAAA,OAAKC,UAAU,6BACbH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,UACbH,EAAAC,EAAAC,cAAA,OACEE,IAAI,aACJC,IAAI,GACJF,UAAU,2BAGdH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,WACbH,EAAAC,EAAAC,cAAA,QAAMC,UAAU,SAASN,EAAK0B,MAC9BvB,EAAAC,EAAAC,cAAA,WACAF,EAAAC,EAAAC,cAAA,QAAMC,UAAU,YAAYN,EAAK2B,OACjCxB,EAAAC,EAAAC,cAAA,WACAF,EAAAC,EAAAC,cAAA,QAAMC,UAAU,YAAhB,SAAkCN,EAAK4B,UAK/CzB,EAAAC,EAAAC,cAAA,WACAF,EAAAC,EAAAC,cAAA,KAAGC,UAAU,QACXH,EAAAC,EAAAC,cAAA,mBAEFF,EAAAC,EAAAC,cAAA,OAAKC,UAAU,iBACdN,EAAK6B,MAAMT,IAAI,SAAAU,GAAI,OAClB3B,EAAAC,EAAAC,cAAA,SACEF,EAAAC,EAAAC,cAAC0B,EAAD,CAAMtC,UAAWqC,kBA/CfpB,IAAMC,WCCpBqB,cACJ,SAAAA,EAAYhD,GAAO,IAAAC,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAA4C,IACjB/C,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAA8C,GAAAzC,KAAAH,KAAMJ,KACDQ,MAAQ,CACXyC,SAAU,GACVC,YAAa,EACbC,SAAU,EACVX,UAAW,CACTY,UAAW,kBACXC,MAAO,OAETA,MAAO,GAVQpD,mFAcC,IAAAU,EAAAP,KAElBQ,MCtBqB,mCDuBlBC,KAAK,SAAAC,GAAQ,OAAIA,EAASC,SAC1BF,KAAK,SAAAG,GACJ,IAAMqC,EAAQ,IAAM1C,EAAKX,MAAMsD,eACzBd,EAAY,CAChBY,UAAW,kBACXC,MAAK,GAAA5B,OAAK4B,EAAL,OAEPE,QAAQC,IAAIxC,EAAKyC,SACjB9C,EAAKM,SAAS,CACZgC,SAAUjC,EAAKyC,QAAQC,OAAO,SAAAC,GAAI,OAAIA,EAAKf,KAAO,KAClDJ,UAAWA,EACXa,MAAOA,0CAMHO,GAEV,IAAIC,EAASC,OAAOC,iBAAiBC,SAASC,eAAe,SAC1DC,WACHL,EAASM,KAAKC,MAAMP,EAAOQ,QAAQ,MAAO,KAE1C,IAAMC,EAAYlE,KAAKI,MAAM6C,MACvBkB,EAAaV,EACbW,EAAapE,KAAKI,MAAMyC,SAASwB,OACnCvB,EAAc9C,KAAKI,MAAM0C,YACzBC,EAAW/C,KAAKI,MAAM2C,SAIf,SAATS,GACAV,EAAcsB,EAAapE,KAAKJ,MAAMsD,gBAEtCJ,IACAC,GAAYmB,EAAYC,GACN,SAATX,GAAmBV,EAAc,IAC1CA,IACAC,GAAYmB,EAAYC,GAE1BnE,KAAKsE,QAAQxB,EAAaC,mCAGpBD,EAAaC,GACnB/C,KAAKa,SAAS,CACZiC,YAAaA,EACbC,SAAUA,EACVX,UAAW,CACTY,UAAS,cAAA3B,OAAgB0B,EAAhB,OACTwB,WAAY,yBACZtB,MAAO,4CAKJ,IAAAuB,EAAAxE,KACDyE,EAAiB,CACrB3C,MAAK,IAAAT,OAAiC,IAA3BrB,KAAKI,MAAM0C,YAAoB,OAAS,UAE/C4B,EAAkB,CACtB5C,MAAK,IAAAT,OACHrB,KAAKI,MAAM0C,cACX9C,KAAKI,MAAMyC,SAASwB,OAASrE,KAAKJ,MAAMsD,eACpC,OACA,UAGR,OACEnC,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAC0D,EAAD,CACE5C,YAAa/B,KAAKI,MAAMyC,SACxBT,UAAWpC,KAAKI,MAAMgC,YAExBrB,EAAAC,EAAAC,cAAA,OAAKC,UAAU,YACbH,EAAAC,EAAAC,cAAA,UACEY,MAAO4C,EACPG,QAAS,kBAAMJ,EAAKK,YAAY,UAEhC9D,EAAAC,EAAAC,cAAA,KAAGC,UAAU,yBAAb,iBAEFH,EAAAC,EAAAC,cAAA,UACEY,MAAO6C,EACPE,QAAS,kBAAMJ,EAAKK,YAAY,UAEhC9D,EAAAC,EAAAC,cAAA,KAAGC,UAAU,yBAAb,2BAtGSI,IAAMC,WA8G3BqB,EAAOkC,aAAe,CACpB5B,eAAgB,GAOHN,QE5GAmC,0LATX,OACEhE,EAAAC,EAAAC,cAAA,WAEEF,EAAAC,EAAAC,cAAC+D,EAAD,cALUzD,cCAlB0D,IAASC,OACPnE,EAAAC,EAAAC,cAACkE,EAAD,MACAvB,SAASC,eAAe","file":"static/js/main.2aac1b3e.chunk.js","sourcesContent":["import React from \"react\";\r\nimport \"./styles.css\";\r\n\r\nexport default class Film extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      filmTitle: \"\",\r\n      release_date: \"\"\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    //\r\n    fetch(this.props.filmTitle)\r\n      .then(response => response.json())\r\n      .then(data => {\r\n        //console.log(data);\r\n        this.setState({\r\n          filmTitle: data.title,\r\n          release_date: data.release_date\r\n        });\r\n      });\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"row valign-wrapper header\">\r\n        <div className=\"col s3\">\r\n          <img\r\n            src=\"star-wars.png\"\r\n            alt=\"\"\r\n            className=\"circle-film responsive-img\"\r\n          />\r\n        </div>\r\n        <div className=\"col s10\">\r\n          <span className=\"subTitle\">\r\n            {this.state.filmTitle}\r\n            {\"  \"}\r\n            {`(${this.state.release_date})`}\r\n          </span>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React from \"react\";\r\nimport Film from \"./Film\";\r\nimport \"./styles.css\";\r\n\r\nclass Cards extends React.Component {\r\n  ColorChange = e => {\r\n    var heart = e.currentTarget;\r\n    if (heart.style.color !== \"green\") {\r\n      heart.style.color = \"green\";\r\n    } else {\r\n      heart.style.color = \"grey\";\r\n    }\r\n  };\r\n  render() {\r\n    return (\r\n      <div className=\"content\">\r\n        {this.props.cardsToShow.map((data, i) => {\r\n          return (\r\n            <div\r\n              className=\"card\"\r\n              id=\"card\"\r\n              key={data.id}\r\n              style={this.props.cardStyle}\r\n            >\r\n              <div className=\"card-image waves-effect waves-block waves-light\">\r\n                <a href={data.href}>\r\n                  <div className=\"row valign-wrapper header\">\r\n                    <div className=\"col s3\">\r\n                      <img\r\n                        src=\"images.png\"\r\n                        alt=\"\"\r\n                        className=\"circle responsive-img\"\r\n                      />\r\n                    </div>\r\n                    <div className=\"col s10\">\r\n                      <span className=\"title\">{data.name}</span>\r\n                      <br />\r\n                      <span className=\"subTitle\">{data.model}</span>\r\n                      <br />\r\n                      <span className=\"subTitle\">Crew: {data.crew}</span>\r\n                    </div>\r\n                  </div>\r\n                </a>\r\n              </div>\r\n              <hr />\r\n              <p className=\"para\">\r\n                <b>Films</b>\r\n              </p>\r\n              <div className=\"card-content\" />\r\n              {data.films.map(film => (\r\n                <p>\r\n                  <Film filmTitle={film} />\r\n                </p>\r\n              ))}\r\n            </div>\r\n          );\r\n        })}\r\n      </div>\r\n    );\r\n  }\r\n}\r\nexport default Cards;\r\n","import React from \"react\";\r\nimport Cards from \"./Cards\";\r\nimport { CARDS_API } from \"../util/config\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nclass Slider extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      cardData: [],\r\n      currentCard: 0,\r\n      position: 0,\r\n      cardStyle: {\r\n        transform: \"translateX(0px)\",\r\n        width: \"0px\"\r\n      },\r\n      width: 0\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    //\r\n    fetch(CARDS_API)\r\n      .then(response => response.json())\r\n      .then(data => {\r\n        const width = 924 / this.props.numCardsToShow;\r\n        const cardStyle = {\r\n          transform: \"translateX(0px)\",\r\n          width: `${width}px`\r\n        };\r\n        console.log(data.results);\r\n        this.setState({\r\n          cardData: data.results.filter(ship => ship.crew > 10),\r\n          cardStyle: cardStyle,\r\n          width: width\r\n        });\r\n      });\r\n  }\r\n\r\n  // func: click the slider buttons\r\n  handleClick(type) {\r\n    // get the card's margin-right\r\n    let margin = window.getComputedStyle(document.getElementById(\"card\"))\r\n      .marginLeft;\r\n    margin = JSON.parse(margin.replace(/px/i, \"\"));\r\n\r\n    const cardWidth = this.state.width; // the card's width\r\n    const cardMargin = margin; // the card's margin\r\n    const cardNumber = this.state.cardData.length; // the number of cards\r\n    let currentCard = this.state.currentCard; // the index of the current card\r\n    let position = this.state.position; // the position of the cards\r\n\r\n    // slide cards\r\n    if (\r\n      type === \"next\" &&\r\n      currentCard < cardNumber - this.props.numCardsToShow\r\n    ) {\r\n      currentCard++;\r\n      position -= cardWidth + cardMargin;\r\n    } else if (type === \"prev\" && currentCard > 0) {\r\n      currentCard--;\r\n      position += cardWidth + cardMargin;\r\n    }\r\n    this.setCard(currentCard, position);\r\n  }\r\n\r\n  setCard(currentCard, position) {\r\n    this.setState({\r\n      currentCard: currentCard,\r\n      position: position,\r\n      cardStyle: {\r\n        transform: `translateX(${position}px)`,\r\n        transition: \"transform .3s ease-out\",\r\n        width: \"308px\"\r\n      }\r\n    });\r\n  }\r\n\r\n  render() {\r\n    const leftArrowStyle = {\r\n      color: ` ${this.state.currentCard === 0 ? \"grey\" : \"green\"}`\r\n    };\r\n    const rigthArrowStyle = {\r\n      color: ` ${\r\n        this.state.currentCard ===\r\n        this.state.cardData.length - this.props.numCardsToShow\r\n          ? \"grey\"\r\n          : \"green\"\r\n      }`\r\n    };\r\n    return (\r\n      <div>\r\n        <Cards\r\n          cardsToShow={this.state.cardData}\r\n          cardStyle={this.state.cardStyle}\r\n        />\r\n        <div className=\"icon-btn\">\r\n          <button\r\n            style={leftArrowStyle}\r\n            onClick={() => this.handleClick(\"prev\")}\r\n          >\r\n            <i className=\"medium material-icons\">chevron_left</i>\r\n          </button>\r\n          <button\r\n            style={rigthArrowStyle}\r\n            onClick={() => this.handleClick(\"next\")}\r\n          >\r\n            <i className=\"medium material-icons\">chevron_right</i>\r\n          </button>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nSlider.defaultProps = {\r\n  numCardsToShow: 3\r\n};\r\n\r\nSlider.propTypes = {\r\n  numCardsToShow: PropTypes.number\r\n};\r\n\r\nexport default Slider;\r\n","export const CARDS_API = \"https://swapi.co/api/starships/\";\r\n","import React, { Component } from \"react\";\nimport Slider from \"./Slider/Slider\";\nimport \"./style.css\";\n\nclass App extends Component {\n  render() {\n    return (\n      <div>\n        {/* <Slider numCardsToShow={3} /> */}\n        <Slider />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}